<#/*THIS IS A T4 FILE*/#>
<#@ template language="C#" #>
<#@ output extension=".gen.cs" #>
//just a comment 15

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
<#@ assembly name="System" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ include file="ReflectionUtil.cs" #>



using System;
using System.Collections;
using System.Collections.Generic;

public static partial class VectorUtil
{

<#
Type[] vectorTypes = new []{typeof(Vector2),typeof(Vector3),typeof(Vector4)};
foreach (var t in vectorTypes)
{
    var TYPE_FULL = $"{ReflectionUtil.GetTypeName(t)}";
#>
    public static bool CloseEnoughByDistance(this <#=TYPE_FULL#> a, <#=TYPE_FULL#> b, float epsilon = E_SQR)
    {
        return MathUtil.CloseEnough(<#=TYPE_FULL#>.SqrMagnitude(a - b), 0f, epsilon);
    }

    public static bool CloseEnoughByEach(this <#=TYPE_FULL#> a, <#=TYPE_FULL#> b, float epsilon = E_D)
    {
    <#
    string[] fields = ReflectionUtil.GetPublicFieldsNames(t);
    string[] conditions = fields.Select(f => $"Mathf.Abs(a.{f}-b.{f})<epsilon").ToArray();
    string result = String.Join( " && ", conditions);
    #>
    return <#=result#>;
    }

    public static bool NotContainsCloseEnoughByEach(this <#=TYPE_FULL#>[] vertices, <#=TYPE_FULL#> vertex, float epsilon = E_D)
    {
        for (var i = 0; i < vertices.Length; i++)
            if (vertex.CloseEnoughByEach(vertices[i], epsilon))
                return false;
        return true;
    }

    /// <summary>Compare 2 equal sized arrays by each vector component</summary>
    /// <exception cref="System.ArgumentNullException">To compare 2 vector array both of them should be not null</exception>
    /// <exception cref="System.ArgumentException">Must compare 2 equal size vector array</exception>
    public static bool CloseEnough(this <#=TYPE_FULL#>[] a, <#=TYPE_FULL#>[] b, float epsilon = E_D)
    {
        if (a == null || b == null) throw new ArgumentNullException("To compare 2 vector array both of them should be not null");
        if (a.Length != b.Length) throw new ArgumentException("Must compare 2 equal size vector array");
        for (var i = 0; i < a.Length; i++)
        {
            if (a.NotContainsCloseEnoughByEach(b[i], epsilon) || b.NotContainsCloseEnoughByEach(a[i], epsilon))
                return false;
        }
        return true;
    }
<#
}
#>

}

