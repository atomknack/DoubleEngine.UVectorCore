<#@ template language="C#" #>
<#@ output extension=".gen.cs" #>
//----------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes will be lost if the code is regenerated.
// </auto-generated>
//----------------------------------------------------------------------------------------
<#@ include file="$(ProjectDir)\_Include\_0_AssemplyImports.ttinclude" #>
<#@ include file="$(ProjectDir)\_Include\_2_GlobalTTInclude.ttinclude" #>
<#@ include file="$(ProjectDir)\_Include\_4_typeDeclaration.ttinclude" #>

<#@ include file="$(ProjectDir)\_Include\_6_Vec3D_typeInitialization.ttinclude" #>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;

namespace <#=globalNamespaceName#>
{
    public static partial class VectorLike
    {
<# 
Dictionary<string,string> convert = new Dictionary<string,string>();
convert["Vec3D"] = "Vec2D";
convert["Vector3"] = "Vector2";
for(var a = 0; a<availableTypes.Count; a++)
    {
    UnfoldTypeDescription(availableTypes[a]);
#>
        public static <#=convert[typeName]#> ConvertXYZtoXY(this <#=typeName#> xyz) => new <#=convert[typeName]#>(xyz.x, xyz.y);
        public static <#=typeName#> ConvertXYtoXYZ(this <#=convert[typeName]#> xy, <#=b.type#> z = 0<#=b.valueEnding#>) => new <#=typeName#>(xy.x, xy.y, z);
<# } #>
    }
}
