<#@ template language="C#" hostspecific="True"#>
<#@ output extension=".gen.cs" #>
<#@ include file="$(ProjectDir)\_Include\_0_AssemplyImports.ttinclude" #>
<#@ include file="$(ProjectDir)\_Include\_2_GlobalTTInclude.ttinclude" #>
<#@ include file="$(ProjectDir)\_Include\_8_QuaternionD_type.ttinclude" #>
<# 
int hashShift = 5;
string equalityEpsilon = "0.0000_0000_0000_1d";
#>
//----------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes will be lost if the code is regenerated.
// </auto-generated>
//----------------------------------------------------------------------------------------
using System;

namespace <#=globalNamespaceName#>
{
    <#=publicReadonly#> partial struct <#=typeName#> : IEquatable<<#=typeName#>>
    {
        <#=publicReadonly#> bool Equals(<#=typeName#> other) => IsEqualOrFlippedEqual(this, other, <#=equalityEpsilon#>);

        <#=publicStatic#> bool operator !=(in <#=typeName#> lhs, in <#=typeName#> rhs)=> !(lhs == rhs);
        <#=publicStatic#> bool operator ==(in <#=typeName#> lhs, in <#=typeName#> rhs)=> IsEqualOrFlippedEqual(lhs, rhs, <#=equalityEpsilon#>);

        <#=publicReadonly#> override int GetHashCode()
        {
            int hash = 0;
<# foreach (var f in fieldNames) { #>
			hash = ((hash << <#=hashShift#>) ^ hash) ^ <#=f#>.GetHashCode();
<# 	} #>
            return hash;
        }
        <#=publicReadonly#> override bool Equals(object other)
        {
            if (!(other is <#=typeName#>))
            {
                return false;
            }
            return Equals((<#=typeName#>)other);
        }


    }
}
